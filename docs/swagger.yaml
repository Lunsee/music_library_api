definitions:
  models.Song:
    properties:
      createdAt:
        type: string
      group:
        type: string
      id:
        type: integer
      link:
        type: string
      releaseDate:
        type: string
      song:
        type: string
      text:
        type: string
      updatedAt:
        type: string
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a simple music API to manage songs
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://swagger.io/terms/
  title: Music API
  version: "1.0"
paths:
  /api/AddSong:
    post:
      consumes:
      - application/json
      description: Добавляет новую песню в базу данных, предварительно получая дополнительную
        информацию с внешнего API
      parameters:
      - description: Данные о песне
        in: body
        name: song
        required: true
        schema:
          $ref: '#/definitions/models.Song'
      produces:
      - application/json
      responses:
        "201":
          description: Песня успешно добавлена
          schema:
            $ref: '#/definitions/models.Song'
        "400":
          description: Некорректный JSON-запрос
          schema:
            type: string
        "404":
          description: Информация о песне не найдена во внешнем API
          schema:
            type: string
        "405":
          description: Неверный метод запроса (требуется POST)
          schema:
            type: string
        "500":
          description: Ошибка сервера при обращении к API или сохранении в БД
          schema:
            type: string
      summary: Добавить песню
      tags:
      - Songs
  /api/EditSong:
    put:
      consumes:
      - application/json
      description: Обновляет указанные параметры песни в базе данных
      parameters:
      - description: ID песни для редактирования
        in: query
        name: songId
        required: true
        type: integer
      - description: 'Список параметров для изменения (через запятую), например: group,song,releaseDate'
        in: query
        name: paramsToEdit
        required: true
        type: string
      - description: JSON с новыми значениями полей
        in: body
        name: body
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: Песня успешно обновлена
          schema:
            $ref: '#/definitions/models.Song'
        "400":
          description: Некорректный ID или параметры запроса
          schema:
            type: string
        "404":
          description: Песня не найдена
          schema:
            type: string
        "405":
          description: Неверный метод запроса (требуется PUT)
          schema:
            type: string
        "500":
          description: Ошибка сервера при обновлении
          schema:
            type: string
      summary: Редактировать песню
      tags:
      - Songs
  /api/GetSongText:
    get:
      consumes:
      - application/json
      description: Возвращает текст песни, разбитый на страницы по указанному лимиту
        строк
      parameters:
      - description: ID песни
        in: query
        name: songId
        required: true
        type: integer
      - description: Номер страницы (по умолчанию 1)
        in: query
        name: page
        type: integer
      - description: Количество строф на странице (по умолчанию 2)
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Текст песни постранично
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Некорректные параметры запроса
          schema:
            type: string
        "404":
          description: Песня не найдена или страница вне диапазона
          schema:
            type: string
        "405":
          description: Неверный метод запроса (требуется GET)
          schema:
            type: string
      summary: Получить текст песни постранично
      tags:
      - Songs
  /api/deleteSong:
    delete:
      description: Удаляет песню из базы данных по её ID
      parameters:
      - description: ID песни для удаления
        in: query
        name: songId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Песня успешно удалена
          schema:
            $ref: '#/definitions/models.Song'
        "400":
          description: Некорректный ID песни или отсутствует параметр songId
          schema:
            type: string
        "404":
          description: Песня не найдена
          schema:
            type: string
        "405":
          description: Неверный метод запроса (требуется DELETE)
          schema:
            type: string
        "500":
          description: Ошибка сервера при удалении песни
          schema:
            type: string
      summary: Удалить песню
      tags:
      - Songs
  /api/getSongs:
    get:
      description: Возвращает список песен с возможностью фильтрации по группе и названию,
        а также пагинацией
      parameters:
      - description: Фильтр по названию группы
        in: query
        name: group
        type: string
      - description: Фильтр по названию песни
        in: query
        name: song
        type: string
      - description: Номер страницы (по умолчанию 1)
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Список найденных песен
          schema:
            items:
              $ref: '#/definitions/models.Song'
            type: array
        "400":
          description: Некорректный запрос (например, если страница вне диапазона)
          schema:
            type: string
        "500":
          description: Ошибка сервера при получении данных из БД
          schema:
            type: string
      summary: Получить список песен
      tags:
      - Songs
swagger: "2.0"
