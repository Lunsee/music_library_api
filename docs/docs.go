// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/AddSong": {
            "post": {
                "description": "Добавляет новую песню в базу данных, предварительно получая дополнительную информацию с внешнего API",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Songs"
                ],
                "summary": "Добавить песню",
                "parameters": [
                    {
                        "description": "Данные о песне",
                        "name": "song",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Song"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Песня успешно добавлена",
                        "schema": {
                            "$ref": "#/definitions/models.Song"
                        }
                    },
                    "400": {
                        "description": "Некорректный JSON-запрос",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Информация о песне не найдена во внешнем API",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "405": {
                        "description": "Неверный метод запроса (требуется POST)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера при обращении к API или сохранении в БД",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/EditSong": {
            "put": {
                "description": "Обновляет указанные параметры песни в базе данных",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Songs"
                ],
                "summary": "Редактировать песню",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID песни для редактирования",
                        "name": "songId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Список параметров для изменения (через запятую), например: group,song,releaseDate",
                        "name": "paramsToEdit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "JSON с новыми значениями полей",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Песня успешно обновлена",
                        "schema": {
                            "$ref": "#/definitions/models.Song"
                        }
                    },
                    "400": {
                        "description": "Некорректный ID или параметры запроса",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Песня не найдена",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "405": {
                        "description": "Неверный метод запроса (требуется PUT)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера при обновлении",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/GetSongText": {
            "get": {
                "description": "Возвращает текст песни, разбитый на страницы по указанному лимиту строк",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Songs"
                ],
                "summary": "Получить текст песни постранично",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID песни",
                        "name": "songId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Номер страницы (по умолчанию 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Количество строф на странице (по умолчанию 2)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Текст песни постранично",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Песня не найдена или страница вне диапазона",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "405": {
                        "description": "Неверный метод запроса (требуется GET)",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/deleteSong": {
            "delete": {
                "description": "Удаляет песню из базы данных по её ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Songs"
                ],
                "summary": "Удалить песню",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID песни для удаления",
                        "name": "songId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Песня успешно удалена",
                        "schema": {
                            "$ref": "#/definitions/models.Song"
                        }
                    },
                    "400": {
                        "description": "Некорректный ID песни или отсутствует параметр songId",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Песня не найдена",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "405": {
                        "description": "Неверный метод запроса (требуется DELETE)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера при удалении песни",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/getSongs": {
            "get": {
                "description": "Возвращает список песен с возможностью фильтрации по группе и названию, а также пагинацией",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Songs"
                ],
                "summary": "Получить список песен",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Фильтр по названию группы",
                        "name": "group",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Фильтр по названию песни",
                        "name": "song",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Номер страницы (по умолчанию 1)",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список найденных песен",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Song"
                            }
                        }
                    },
                    "400": {
                        "description": "Некорректный запрос (например, если страница вне диапазона)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера при получении данных из БД",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Song": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "group": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "link": {
                    "type": "string"
                },
                "releaseDate": {
                    "type": "string"
                },
                "song": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Music API",
	Description:      "This is a simple music API to manage songs",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
